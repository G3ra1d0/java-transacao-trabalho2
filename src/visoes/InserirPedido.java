/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visoes;

import controles.ClienteControle;
import controles.PedidoControle;
import controles.ProdutoControle;
import controles.VendedorControle;
import java.awt.Color;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import javax.swing.DefaultListModel;

/**
 *
 * @author root
 */
public class InserirPedido extends javax.swing.JFrame {

    /**
     * Creates new form InserirPedido
     */
    private DefaultListModel ListModelProdutos;

    private DefaultListModel ListModelAdicionaProduto;

    private Collection<Map<String, String>> clientes;

    private Collection<Map<String, String>> vendedores;

    private Collection<Map<String, String>> produtos;

    private Collection<Map<String, String>> produtosAdicionados;

    public InserirPedido() {
        initComponents();

        inicializaModelList();

        carregarClientes();

        carregarVendedores();

        carregarProdutos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxCliente = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxVendedor = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListProdutos = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListProdutosAdicionados = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldPreço = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldQuantidadeDisponivel = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButtonAdicionarProduto = new javax.swing.JButton();
        jButtonRemoverProduto = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldQuantidadeSolicitada = new javax.swing.JTextField();
        jButtonSalvarPedido = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaObservacao = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Clientes");

        jLabel2.setText("Vendedores");

        jListProdutos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListProdutosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListProdutos);

        jLabel3.setText("Produtos");

        jLabel4.setText("Produtos Adicionados");

        jScrollPane2.setViewportView(jListProdutosAdicionados);

        jLabel5.setText("Dados do Produto");

        jTextFieldPreço.setEditable(false);

        jLabel6.setText("Preço");

        jTextFieldQuantidadeDisponivel.setEditable(false);

        jLabel7.setText("Quantidade Disponível");

        jButtonAdicionarProduto.setText("Adicionar");
        jButtonAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarProdutoActionPerformed(evt);
            }
        });

        jButtonRemoverProduto.setText("Remover");
        jButtonRemoverProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverProdutoActionPerformed(evt);
            }
        });

        jLabel8.setText("Quantidade");

        jTextFieldQuantidadeSolicitada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeSolicitadaKeyPressed(evt);
            }
        });

        jButtonSalvarPedido.setText("SALVAR PEDIDO");
        jButtonSalvarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarPedidoActionPerformed(evt);
            }
        });

        jTextAreaObservacao.setColumns(20);
        jTextAreaObservacao.setRows(5);
        jScrollPane3.setViewportView(jTextAreaObservacao);

        jLabel9.setText("Observação do Pedido");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jComboBoxVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 83, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButtonAdicionarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonRemoverProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFieldQuantidadeSolicitada, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, 100))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldPreço, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jTextFieldQuantidadeDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addComponent(jButtonSalvarPedido)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldPreço, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldQuantidadeSolicitada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAdicionarProduto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonRemoverProduto))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldQuantidadeDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSalvarPedido)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarProdutoActionPerformed

        if (!jTextFieldQuantidadeSolicitada.getText().isEmpty() && (Double.parseDouble(jTextFieldQuantidadeSolicitada.getText()) <= Double.parseDouble(jTextFieldQuantidadeDisponivel.getText()))) {
            jTextFieldQuantidadeDisponivel.setBackground(Color.white);
            jTextFieldQuantidadeSolicitada.setBackground(Color.white);

            if (!ListModelAdicionaProduto.contains(jListProdutos.getSelectedValue())) {
                ListModelAdicionaProduto.addElement(jListProdutos.getSelectedValue() + " Quant: "
                        + jTextFieldQuantidadeSolicitada.getText());
                Map<String, String> produto = new HashMap<>();

                String codigo = jListProdutos.getSelectedValue().toString().split(" ")[1];

                Double quantidadeSolicitada = Double.parseDouble(jTextFieldQuantidadeSolicitada.getText());

                produto.put("id", codigo);
                produto.put("saldo", quantidadeSolicitada.toString());

                this.produtosAdicionados.add(produto);

                this.produtos.stream()
                        .filter(p -> p.get("id").equals(codigo))
                        .forEach(p -> {
                            Double quantidade = Double.parseDouble(p.get("saldo")) - quantidadeSolicitada;
                            p.put("saldo", quantidade.toString());
                        });
            } else {
                String codigo = jListProdutos.getSelectedValue().toString().split(" ")[1];

                Map<String, String> produtoAdd = this.produtosAdicionados.stream()
                        .filter(p -> p.get("id").equals(codigo))
                        .findAny()
                        .get();

                this.produtos.stream()
                        .filter(p -> p.get("id").equals(produtoAdd.get("id")))
                        .forEach(p -> {
                            Double quantidade = Double.parseDouble(p.get("saldo")) + Double.parseDouble(produtoAdd.get("saldo"));
                            p.put("saldo", quantidade.toString());
                        });

                Double quantidadeSolicitada = Double.parseDouble(jTextFieldQuantidadeSolicitada.getText());

                this.produtosAdicionados.stream()
                        .filter(p -> p.get("id").equals(codigo))
                        .forEach(p -> {
                            p.put("saldo", quantidadeSolicitada.toString());
                        });

            }
        } else {
            jTextFieldQuantidadeDisponivel.setBackground(Color.red);
            jTextFieldQuantidadeSolicitada.setBackground(Color.red);
        }

    }//GEN-LAST:event_jButtonAdicionarProdutoActionPerformed

    private void jButtonRemoverProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverProdutoActionPerformed
        String codigo = jListProdutos.getSelectedValue().toString().split(" ")[1];

        Map<String, String> produtoAdd = this.produtosAdicionados.stream()
                .filter(p -> p.get("id").equals(codigo))
                .findAny()
                .get();

        ListModelAdicionaProduto.removeElement(jListProdutosAdicionados.getSelectedValue());

        this.produtos.stream()
                .filter(p -> p.get("id").equals(codigo))
                .forEach(p -> {
                    Double quantidade = Double.parseDouble(p.get("saldo")) + Double.parseDouble(produtoAdd.get("saldo"));
                    p.put("saldo", quantidade.toString());
                });

        this.produtosAdicionados
                .stream()
                .filter(p -> {
                    return p.get("id").equals(codigo);
                })
                .findFirst()
                .ifPresent(p -> {
                    this.produtosAdicionados.remove(p);
                });
    }//GEN-LAST:event_jButtonRemoverProdutoActionPerformed

    private void jListProdutosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListProdutosValueChanged
        String codigo = jListProdutos.getSelectedValue().toString().split(" ")[1];
        this.produtos
                .stream()
                .filter(p -> {
                    return p.get("id").equals(codigo);
                })
                .findFirst()
                .ifPresent(p -> {
                    jTextFieldPreço.setText(p.get("preco"));
                    jTextFieldQuantidadeDisponivel.setText(p.get("saldo"));
                });

    }//GEN-LAST:event_jListProdutosValueChanged

    private void jTextFieldQuantidadeSolicitadaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeSolicitadaKeyPressed

    }//GEN-LAST:event_jTextFieldQuantidadeSolicitadaKeyPressed

    private void jButtonSalvarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarPedidoActionPerformed
        Map<String, String> pedido = new HashMap<>();
        
        pedido.put("observacao", jTextAreaObservacao.getText());
        pedido.put("cliente", jComboBoxCliente.getSelectedItem().toString().split(" ")[0]);
        pedido.put("vendedor", jComboBoxVendedor.getSelectedItem().toString().split(" ")[0]);
        
        PedidoControle.salvarPedido(pedido, this.produtosAdicionados);
    }//GEN-LAST:event_jButtonSalvarPedidoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InserirPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InserirPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InserirPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InserirPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InserirPedido().setVisible(true);
            }
        });
    }

    public void inicializaModelList() {
        this.ListModelProdutos = new DefaultListModel();
        jListProdutos.setModel(this.ListModelProdutos);

        this.ListModelAdicionaProduto = new DefaultListModel();
        jListProdutosAdicionados.setModel(this.ListModelAdicionaProduto);

    }

    public void carregarClientes() {
        this.clientes = ClienteControle.listarClientes();

        this.clientes.forEach(cliente -> {
            jComboBoxCliente.addItem(cliente.get("id") + " " + cliente.get("nome"));
        });
    }

    public void carregarVendedores() {
        this.vendedores = VendedorControle.listarVendedores();

        this.vendedores.forEach(vendedor -> {
            jComboBoxVendedor.addItem(vendedor.get("id") + " " + vendedor.get("nome"));
        });
    }

    public void carregarProdutos() {
        this.produtosAdicionados = new LinkedList<>();

        this.produtos = ProdutoControle.listarProdutos();

        this.produtos.forEach(produto -> {
            String itemProd = "codigo: " + produto.get("id") + " - " + produto.get("descricao");
            this.ListModelProdutos.addElement(itemProd);
        });
    }

    public void recarregarLista() {
        this.ListModelProdutos.removeAllElements();

        this.produtos.forEach(produto -> {
            String itemProd = "codigo: " + produto.get("id") + " - " + produto.get("descricao");
            this.ListModelProdutos.addElement(itemProd);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionarProduto;
    private javax.swing.JButton jButtonRemoverProduto;
    private javax.swing.JButton jButtonSalvarPedido;
    private javax.swing.JComboBox<String> jComboBoxCliente;
    private javax.swing.JComboBox<String> jComboBoxVendedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jListProdutos;
    private javax.swing.JList<String> jListProdutosAdicionados;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextAreaObservacao;
    private javax.swing.JTextField jTextFieldPreço;
    private javax.swing.JTextField jTextFieldQuantidadeDisponivel;
    private javax.swing.JTextField jTextFieldQuantidadeSolicitada;
    // End of variables declaration//GEN-END:variables
}
